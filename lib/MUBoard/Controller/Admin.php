<?php
/**
 * MUBoard.
 *
 * @copyright Michael Ueberschaer
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package MUBoard
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://www.webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.5.4 (http://modulestudio.de) at Mon Jun 18 14:46:37 CEST 2012.
 */

/**
 * This is the Admin controller class providing navigation and interaction functionality.
 */
class MUBoard_Controller_Admin extends MUBoard_Controller_Base_Admin
{

    /**
     * Post initialise.
     *
     * Run after construction.
     *
     * @return void
     */
    protected function postInitialize()
    {
        // Set caching to true by default.
        $this->view->setCaching(Zikula_View::CACHE_DISABLED);
    }

    /**
     *
     */
    public function view($args)
    {
        $ot = $this->request->query->filter('ot', 'category', FILTER_SANITIZE_STRING);
         
        //view of postings is blocked
        if ($ot == 'posting') {
            return System::redirect(ModUtil::url($this->name, 'admin', 'view'));
        }
        else {
            return parent::view($args);
        }
    }
    /**
     * Controller method to close a posting ( issue )
     */

    public function close()
    {

        $request = new Zikula_Request_Http();
        $id = $request->query->filter('id', 0, FILTER_SANITIZE_NUMBER_INT);
        	
        MUBoard_Util_Model::closePosting($id);
        	
        return System::redirect(ModUtil::url($this->name, 'user', 'display' , array('ot' => 'posting', 'id' => $id)));
        	
    }

    /**
     * Controller method to reopen a posting ( issue )
     */

    public function open()
    {

        $request = new Zikula_Request_Http();
        $id = $request->query->filter('id', 0, FILTER_SANITIZE_NUMBER_INT);
        	
        MUBoard_Util_Model::openPosting($id);
        	
        return System::redirect(ModUtil::url($this->name, 'user', 'display' , array('ot' => 'posting', 'id' => $id)));
        	
    }

    /**
     * Controller method to take an abo
     */

    public function take()
    {
        $request = new Zikula_Request_Http();
        $ot = $request->query->filter('object', 'category', FILTER_SANITIZE_STRING);
        $posting = $request->query->filter('posting', 0, FILTER_SANITIZE_NUMBER_INT);
        $forum = $request->query->filter('forum', 0, FILTER_SANITIZE_NUMBER_INT);
        $category = $request->query->filter('category', 0, FILTER_SANITIZE_NUMBER_INT);
        $view = $request->query->filter('view', 'view', FILTER_SANITIZE_STRING);
        $cat = $request->query->filter('cat', 0, FILTER_SANITIZE_NUMBER_INT);
        $thisforum = $request->query->filter('thisforum', 0, FILTER_SANITIZE_NUMBER_INT);

        MUBoard_Util_Model::takeAbo($posting, $forum, $category);
        if ($posting > 0) {
            if ($ot == 'posting') {
                return System::redirect(ModUtil::url($this->name, 'user', 'display' , array('ot' => 'posting', 'id' => $posting)));
            }
            if ($ot == 'forum') {
                return System::redirect(ModUtil::url($this->name, 'user', 'display' , array('ot' => 'forum', 'id' => $forum)));
            }
        }
        if ($thisforum > 0) {
            return System::redirect(ModUtil::url($this->name, 'user', 'display', array('ot' => 'forum', 'id' => $thisforum)));
        }
        if ($forum > 0 && $view == 'display') {
            return System::redirect(ModUtil::url($this->name, 'user', 'display' , array('ot' => 'category', 'id' => $cat)));
        }

        if ($forum > 0 && $view == 'view') {
            return System::redirect(ModUtil::url($this->name, 'user', 'view' , array('ot' => 'category')));
        }
    }

    /**
     * Controller method to quit an abo
     */

    public function quit()
    {
        $request = new Zikula_Request_Http();
        $ot = $request->query->filter('object', 'category', FILTER_SANITIZE_STRING);
        $posting = $request->query->filter('posting', 0, FILTER_SANITIZE_NUMBER_INT);
        $forum = $request->query->filter('forum', 0, FILTER_SANITIZE_NUMBER_INT);
        $category = $request->query->filter('category', 0, FILTER_SANITIZE_NUMBER_INT);
        $view = $request->query->filter('view', 'view', FILTER_SANITIZE_STRING);
        $cat = $request->query->filter('cat', 0, FILTER_SANITIZE_NUMBER_INT);
        $thisforum = $request->query->filter('thisforum', 0, FILTER_SANITIZE_NUMBER_INT);

        MUBoard_Util_Model::quitAbo($posting, $forum, $category);
        if ($posting > 0) {
            if ($ot == 'posting') {
                return System::redirect(ModUtil::url($this->name, 'user', 'display' , array('ot' => 'posting', 'id' => $posting)));
            }
            if ($ot == 'forum') {
                return System::redirect(ModUtil::url($this->name, 'user', 'display' , array('ot' => 'forum', 'id' => $forum)));
            }
        }
        if ($thisforum > 0) {
            return System::redirect(ModUtil::url($this->name, 'user', 'display', array('ot' => 'forum', 'id' => $thisforum)));
        }
        if ($forum > 0 && $view == 'display') {
            return System::redirect(ModUtil::url($this->name, 'user', 'display' , array('ot' => 'category', 'id' => $cat)));
        }

        if ($forum > 0 && $view == 'view') {
            return System::redirect(ModUtil::url($this->name, 'user', 'view' , array('ot' => 'category')));
        }
    }

    /**
     * Controller method to mark a posting as solved ( issue )
     */

    public function solved()
    {

        $request = new Zikula_Request_Http();
        $id = $request->query->filter('id', 0, FILTER_SANITIZE_NUMBER_INT);
        	
        MUBoard_Util_Model::solvedPosting($id);
        	
        return System::redirect(ModUtil::url($this->name, 'user', 'display' , array('ot' => 'posting', 'id' => $id)));
        	
    }

    /**
     * Controller method to mark a posting as solved ( issue )
     */

    public function unsolved()
    {

        $request = new Zikula_Request_Http();
        $id = $request->query->filter('id', 0, FILTER_SANITIZE_NUMBER_INT);
        	
        MUBoard_Util_Model::unsolvedPosting($id);
        	
        return System::redirect(ModUtil::url($this->name, 'user', 'display' , array('ot' => 'posting', 'id' => $id)));
        	
    }
    
	/**
	 * This method takes care of the application configuration.
	 *
	 * @return string Output
	 */
	public function import()
	{
		$this->throwForbiddenUnless(SecurityUtil::checkPermission($this->name . '::', '::', ACCESS_ADMIN));

		// Create new Form reference
		$view = FormUtil::newForm($this->name, $this);

		// Execute form using supplied template and page event handler
		return $view->execute('admin/import.tpl', new MUBoard_Form_Handler_Admin_Base_Import());
	}
}
