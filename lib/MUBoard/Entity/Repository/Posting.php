<?php
/**
 * MUBoard.
 *
 * @copyright Michael Ueberschaer
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package MUBoard
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://www.webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.5.4 (http://modulestudio.de) at Sun Oct 14 15:42:51 CEST 2012.
 */

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;
use Doctrine\ORM\QueryBuilder;

/**
 * Repository class used to implement own convenience methods for performing certain DQL queries.
 *
 * This is the concrete repository class for posting entities.
 */
class MUBoard_Entity_Repository_Posting extends MUBoard_Entity_Repository_Base_Posting
{
    /**
     * Build a generic Doctrine query supporting WHERE and ORDER BY
     *
     * @param string  $where    The where clause to use when retrieving the collection (optional) (default='').
     * @param string  $orderBy  The order-by clause to use when retrieving the collection (optional) (default='').
     * @param boolean $useJoins Whether to include joining related objects (optional) (default=true).
     *
     * @return Doctrine\ORM\Query query instance to be further processed
     */
    protected function _intBaseQuery($where = '', $orderBy = '', $useJoins = true)
    {
    	$view = new Zikula_Request_Http();
    	
        $ot = $view->getGet()->filter('ot', 'category', FILTER_SANITIZE_STRING);
		$type = $view->getGet()->filter('type', 'user', FILTER_SANITIZE_STRING);
		$func = $view->getGet()->filter('func', 'view', FILTER_SANITIZE_STRING);	
    	
        $selection = 'tbl';        

        /*if (($ot == 'category' || $ot == 'forum') && $func == 'view') {
        	$selection .= ' ,MAX(tbl.createdDate) as cDate';
        }*/

        if ($useJoins === true) {
            $selection .= $this->addJoinsToSelection();
        }

        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select($selection)
           ->from('MUBoard_Entity_Posting', 'tbl');

        if ($useJoins === true) {
            $this->addJoinsToFrom($qb);
        }
        
        if ($func == 'view' && $ot == 'posting') {
        	if ($where != '') {
        		$where .= ' AND ';
        	}
        	$where .= 'tbl.parent_id IS NULL';
        }
        
        if (!empty($where)) {
            $qb->where($where);
        }

        // add order by clause
        if (!empty($orderBy)) {
            $qb->add('orderBy', 'tbl.' . $orderBy);
        }

        $query = $qb->getQuery();

// TODO - see https://github.com/zikula/core/issues/118
        // use FilterUtil to support generic filtering
        //$fu = new FilterUtil('MUBoard', $this);

        // you could set explicit filters at this point, something like
        // $fu->setFilter('type:eq:' . $args['type'] . ',id:eq:' . $args['id']);
        // supported operators: eq, ne, like, lt, le, gt, ge, null, notnull

        // process request input filters and add them to the query.
        //$fu->enrichQuery($query);


        return $query;
    }
    
    /**
     *
     * @param integer $forumid
     * @return ArrayCollection collection containing retrieved MUBoard_Entity_Posting instances
     */
    public function getLastPost($forumid)
    {
    	$qb = $this->getEntityManager()->createQueryBuilder();
    	$qb->select('tbl')
    	   ->from('MUBoard_Entity_Posting', 'tbl')
    	   ->where('tbl.forum = :forum')->setParameter('forum', $forumid)
    	   ->orderBy('tbl.id', 'DESC')
    	   ->setMaxResults(1);

    	$query = $qb->getQuery();
        $results = $query->getResult();
        return count($results) > 0 ? $results[0] : null;
    
    }
}
