<?php
/**
 * Board.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Michael Ueberschaer <info@homepages-mit-zikula.de>.
 * @link https://homepages-mit-zikula.de
 * @link http://zikula.org
 * @version Generated by ModuleStudio (https://modulestudio.de).
 */

namespace MU\BoardModule\Form\Handler\Posting;

use MU\BoardModule\Form\Handler\Posting\Base\AbstractEditHandler;

/**
 * This handler class handles the page events of editing forms.
 * It aims on the posting object type.
 */
class EditHandler extends AbstractEditHandler
{
    /**
     * This method executes a certain workflow action.
     *
     * @param array $args List of arguments from handleCommand method
     *
     * @return boolean Whether everything worked well or not
     *
     * @throws RuntimeException Thrown if concurrent editing is recognised or another error occurs
     */
    public function applyAction(array $args = [])
    {
        // get treated entity reference from persisted member var
        $entity = $this->entityRef;
        
        $forumId = $this->request->request->get('forumid',0);
        $forumRepository = $this->entityFactory->getRepository('forum');
        if ($forumId > 0) {
        $forum = $forumRepository->find($forumId);
        $entity['forum'] = $forum;
        }
        
        $postingId = $this->request->request->get('postingid',0);
        $postingRepository = $this->entityFactory->getRepository('posting');
        if ($postingId > 0) {
        $posting = $postingRepository->find($postingId);
        $entity['parent'] = $posting;
        }
    
        $action = $args['commandName'];
    
        $success = false;
        $flashBag = $this->request->getSession()->getFlashBag();
        try {
            // execute the workflow action
            $success = $this->workflowHelper->executeAction($entity, $action);
        } catch (\Exception $exception) {
            $flashBag->add('error', $this->__f('Sorry, but an error occured during the %action% action. Please apply the changes again!', ['%action%' => $action]) . ' ' . $exception->getMessage());
            $logArgs = ['app' => 'MUBoardModule', 'user' => $this->currentUserApi->get('uname'), 'entity' => 'posting', 'id' => $entity->getKey(), 'errorMessage' => $exception->getMessage()];
            $this->logger->error('{app}: User {user} tried to edit the {entity} with id {id}, but failed. Error details: {errorMessage}.', $logArgs);
        }
    
        $this->addDefaultMessage($args, $success);
    
        if ($success && $this->templateParameters['mode'] == 'create') {
            // store new identifier
            $this->idValue = $entity->getKey();
        }
    
        return $success;
    }
}
