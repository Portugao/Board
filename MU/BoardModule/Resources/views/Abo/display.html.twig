{# purpose of this template: abos user display view #}
{% set baseTemplate = app.request.query.getBoolean('raw', false) ? 'raw' : 'base' %}
{% extends 'MUBoardModule::' ~ baseTemplate ~ '.html.twig' %}
{% block pageTitle %}{{ abo|muboardmodule_formattedTitle|default(__('Abo')) }}{% endblock %}
{% block title %}
    {% set templateTitle = abo|muboardmodule_formattedTitle|default(__('Abo')) %}
    {{ templateTitle|notifyFilters('muboardmodule.filter_hooks.abos.filter')|safeHtml }}
    {% set itemActions = knp_menu_get('MUBoardModule:ItemActionsMenu:menu', [], {entity: abo, area: routeArea, context: 'display'}) %}
    <div class="dropdown">
        <a id="itemActions{{ abo.getKey() }}DropDownToggleStart" role="button" data-toggle="dropdown" href="javascript:void(0);" class="hidden dropdown-toggle"><i class="fa fa-tasks"></i> {{ __('Actions') }} <span class="caret"></span></a>
        {{ knp_menu_render(itemActions, {template: 'ZikulaMenuModule:Override:bootstrap_fontawesome.html.twig'}) }}
    </div>
{% endblock %}
{% block content %}
    {% set isQuickView = app.request.query.getBoolean('raw', false) %}
    <div class="muboardmodule-abo muboardmodule-display">

    <dl>
        {% if abo.userid is not empty %}
            <dt>{{ __('Userid') }}</dt>
            <dd>{{ abo.userid }}</dd>
        {% endif %}
        {% if abo.catid is not empty %}
            <dt>{{ __('Catid') }}</dt>
            <dd>{{ abo.catid }}</dd>
        {% endif %}
        {% if abo.forumid is not empty %}
            <dt>{{ __('Forumid') }}</dt>
            <dd>{{ abo.forumid }}</dd>
        {% endif %}
        {% if abo.postingid is not empty %}
            <dt>{{ __('Postingid') }}</dt>
            <dd>{{ abo.postingid }}</dd>
        {% endif %}
        
    </dl>

    {{ include('@MUBoardModule/Helper/includeStandardFieldsDisplay.html.twig', {obj: abo}) }}

    {{ block('display_hooks') }}
</div>
{% endblock %}
{% block display_hooks %}
    {% set hooks = notifyDisplayHooks(eventName='muboardmodule.ui_hooks.abos.display_view', id=abo.getKey(), urlObject=currentUrlObject, outputAsArray=true) %}
    {% if hooks is iterable and hooks|length > 0 %}
        {% for area, hook in hooks %}
            <div class="z-displayhook" data-area="{{ area|e('html_attr') }}">{{ hook|raw }}</div>
        {% endfor %}
    {% endif %}
{% endblock %}
