<?php
/**
 * Board.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Michael Ueberschaer <info@homepages-mit-zikula.de>.
 * @link https://homepages-mit-zikula.de
 * @link http://zikula.org
 * @version Generated by ModuleStudio (https://modulestudio.de).
 */

namespace MU\BoardModule\Helper;

use MU\BoardModule\Helper\Base\AbstractControllerHelper;

use Zikula\Component\SortableColumns\SortableColumns;
use Zikula\ExtensionsModule\Api\ApiInterface\VariableApiInterface;


/**
 * Helper implementation class for controller layer methods.
 */
class ControllerHelper extends AbstractControllerHelper
{
	    /**
     * Processes the parameters for a view action.
     * This includes handling pagination, quick navigation forms and other aspects.
     *
     * @param string          $objectType         Name of treated entity type
     * @param SortableColumns $sortableColumns    Used SortableColumns instance
     * @param array           $templateParameters Template data
     * @param boolean         $hasHookSubscriber  Whether hook subscribers are supported or not
     *
     * @return array Enriched template parameters used for creating the response
     */
    /*public function processViewActionParameters($objectType, SortableColumns $sortableColumns, array $templateParameters = [], $hasHookSubscriber = false)
    {
    	$templateParameters = parent::processViewActionParameters($objectType, $sortableColumns, $templateParameters);
    	$entries = $templateParameters['items'];
    	unset($templateParameters['items']);
    	$countPostings = 0;
    	foreach ($entries as $entry) {
    		if ($objectType == 'category') {
    			$forums = $entry['forum'];
    			foreach ($forums as $forum) {
    				$countPostings = $countPostings + count($forum['posting']);
    			}
    		}

    		$newEntries['countPostings'] = $countPostings;
    		$templateParameters['items'] = $newEntries;
    	}
    	
    	return $templateParameters;
    
    }*/
}
